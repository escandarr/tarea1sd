version: '3.8'

services:
  redis1:
    image: bitnami/redis:latest
    container_name: redis-server-1
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_1:/bitnami/redis/data
    networks: 
      - redisn
    command: ["redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/bitnami/redis/nodes.conf", "--port", "6379", "--protected-mode", "no"]

  redis2:
    image: bitnami/redis:latest
    container_name: redis-server-2
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6380:6379"
    volumes:
      - redis_data_2:/bitnami/redis/data
    networks: 
      - redisn
    command: ["redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/bitnami/redis/nodes.conf", "--port", "6379", "--protected-mode", "no"]

  redis3:
    image: bitnami/redis:latest
    container_name: redis-server-3
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6381:6379"
    volumes:
      - redis_data_3:/bitnami/redis/data
    networks: 
      - redisn
    command: ["redis-server", "--cluster-enabled", "yes", "--cluster-config-file", "/bitnami/redis/nodes.conf", "--port", "6379", "--protected-mode", "no"]

  redis-cluster-init:
    image: bitnami/redis:latest
    depends_on:
      - redis1
      - redis2
      - redis3
    networks:
      - redisn
    entrypoint: [
      "sh", "-c", 
      "sleep 30 && redis-cli --cluster create redis-server-1:6379 redis-server-2:6379 redis-server-3:6379 --cluster-replicas 0 --cluster-yes"
    ]

  app_service:
    build: .
    container_name: app_service
    ports:
      - "5000:5000"  # Puerto para la API
      - "50051:50051" # Puerto para gRPC
    depends_on:
      - redis1
      - redis2
      - redis3
    networks:
      - redisn
    volumes:
      - .:/app

volumes:
  redis_data_1:
  redis_data_2:
  redis_data_3:

networks:
  redisn:
    driver: bridge
